{"version":3,"sources":["Components/Crud.jsx","App.js","reportWebVitals.js","index.js"],"names":["Crud","_useState","useState","_useState2","Object","slicedToArray","id","setId","_useState3","_useState4","lista","setLista","_useState5","_useState6","error","setError","_useState7","_useState8","editId","setEditId","_useState9","nombre","apellido","cedula","_useState10","user","setUser","resetUser","onChangeHandler","_property","_value","prevState","objectSpread","defineProperty","addToList","arguments","length","undefined","concat","toConsumableArray","verifyFields","errored","keys","forEach","key","trim","deleteUser","filtrado","filter","item","react_default","a","createElement","Container","className","Row","Col","xs","Form","onSubmit","e","preventDefault","FloatingLabel","controlId","label","Control","type","size","onChange","target","value","placeholder","Button","variant","Table","striped","responsive","hover","map","onClick","obj","Alert","join","App","Components_Crud","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f3b02eb2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, FloatingLabel, Table, Button, Alert } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Crud() {\r\n    const [id, setId] = useState(1);\r\n    const [lista, setLista] = useState([]);\r\n    const [error, setError] = useState([]);\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    const [user, setUser] = useState({\r\n        nombre: '',\r\n        apellido: '',\r\n        cedula: '',\r\n    });\r\n\r\n    const resetUser = () => {\r\n        setUser({\r\n            nombre: '',\r\n            apellido: '',\r\n            cedula: '',\r\n        });\r\n    }\r\n\r\n    const onChangeHandler = (_property, _value) => {\r\n        setUser(prevState => {\r\n            return { ...prevState, [_property]: _value }\r\n        });\r\n    }\r\n\r\n    const addToList = (_value, customId = null) => {\r\n        if (!customId) \r\n            _value.id = id;\r\n        setLista(prevState => [...prevState,_value] );\r\n    }\r\n\r\n    const addToError = (_value) => {\r\n        setError(prevState => [...prevState,_value] );\r\n    }\r\n\r\n    const resetError = () => {\r\n        setError([]);\r\n    }\r\n\r\n    const verifyFields = () => {\r\n        let errored = false;\r\n        Object.keys(user).forEach((key) => {\r\n            if (key === 'id') return;\r\n\r\n            if (!user[key] || !user[key].trim()) {\r\n                addToError(`${key} es requerido`);\r\n                errored = true;\r\n            }\r\n        })\r\n\r\n        if (errored) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        resetError();\r\n        if (editId) {  \r\n            if (!verifyFields())\r\n                return;\r\n            \r\n            deleteUser(editId)\r\n            addToList({...user}, editId)\r\n\r\n            setEditId(null);\r\n        } else {\r\n            if (!verifyFields())\r\n                return;\r\n            addToList(user);\r\n            setId(id + 1);\r\n        }\r\n        resetUser();\r\n    }\r\n\r\n    const deleteUser = (id) => {\r\n        const filtrado = lista.filter(item => item.id !== id)\r\n        setLista(filtrado);\r\n\r\n        resetUser();\r\n        setEditId(null);\r\n    }\r\n\r\n    const setFields = (obj) => {\r\n        setUser(obj);\r\n        setEditId(obj.id);\r\n    }\r\n\r\n    return (\r\n        <Container className='mt-4 justify-content-center'>\r\n            <Row className='justify-content-center'>\r\n                <Col xs={8}>\r\n                    <Form onSubmit={formSubmitHandler}>\r\n                        <FloatingLabel\r\n                            controlId='nombre'\r\n                            label='Nombre'\r\n                            className='mb-3'\r\n                        >\r\n                            <Form.Control type='text' size='md' onChange={(e) => onChangeHandler(`nombre`, e.target.value)} placeholder='Ingrese su nombre' value={user.nombre} />\r\n                        </FloatingLabel>\r\n                        \r\n                        <FloatingLabel\r\n                            controlId='apellido'\r\n                            label='Apellido'\r\n                            className='mb-3'\r\n                        >\r\n                            <Form.Control type='text' size='md' onChange={(e) => onChangeHandler(`apellido`, e.target.value)} placeholder='Ingrese su apellido' value={user.apellido} />\r\n                        </FloatingLabel>\r\n\r\n                        <FloatingLabel\r\n                            controlId='cedula'\r\n                            label='Cedula'\r\n                            className='mb-3'\r\n                        >\r\n                            <Form.Control type='text' size='md' onChange={(e) => onChangeHandler(`cedula`, e.target.value)} placeholder='Ingrese su cedula' value={user.cedula} />\r\n                        </FloatingLabel>\r\n                        {\r\n                            editId ? (\r\n                                <Button variant='primary w-100' type='submit'>\r\n                                    Editar\r\n                                </Button>\r\n                            ) : (\r\n                                <Button variant='primary w-100' type='submit'>\r\n                                    Agregar\r\n                                </Button>\r\n                            )\r\n                        }\r\n\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={8} className='mt-4'>\r\n                    <Table striped responsive hover variant='light'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='text-center'>Id</th>\r\n                                <th className='text-center'>Nombre</th>\r\n                                <th className='text-center'>Apellido</th>\r\n                                <th className='text-center'>Cedula</th>\r\n                                <th className='text-center'>Acciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                lista.map(user => (\r\n                                    <tr key={user.id + 1}>\r\n                                        <td className='text-center'>{user.id}</td>\r\n                                        <td className='text-center'>{user.nombre}</td>\r\n                                        <td className='text-center'>{user.apellido}</td>\r\n                                        <td className='text-center'>{user.cedula}</td>\r\n                                        <td className='text-center'>\r\n                                            <Button className='me-2' onClick={() => { setFields(user) }} variant='outline-primary' size='sm'>Editar</Button>\r\n                                            <Button onClick={() => { deleteUser(user.id) }} variant='outline-danger' size='sm'>Borrar</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    {\r\n                        error.length !== 0 &&\r\n                            <Alert className='text-uppercase' variant='danger'>\r\n                                {error.join(', ')}\r\n                            </Alert>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Crud;","import React from 'react';\r\nimport Crud from './Components/Crud';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Crud />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}